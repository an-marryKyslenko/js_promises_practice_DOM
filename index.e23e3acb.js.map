{"mappings":"ACEA,IAEI,EAFA,EAAgB,CAAA,EAChB,EAAiB,CAAA,EAEf,EAAe,SAAS,aAAa,CAAC,OAI5C,SAAS,IACP,aAAa,GAEb,EAAQ,WAAW,WACZ,GACH,GAEJ,EAAG,IACL,CA+BA,SAAS,IACP,OAAO,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACM,EACF,EAAQ,8BAER,EAAO,AAAI,MAAM,8BAErB,GACG,IAAI,CAAC,SAAC,CADT,EAES,EAAa,SAAS,CAAC,QAAQ,CAAC,YACnC,EAAa,SAAS,CAAC,GAAG,CAAC,WAGzB,EAAa,SAAS,CAAC,QAAQ,CAAC,UAClC,EAAa,SAAS,CAAC,MAAM,CAAC,SAEhC,EAAa,SAAS,CAAG,EACzB,SAAS,IAAI,CAAC,OAAO,CAAC,EACxB,GACC,KAAK,CAAC,SAAC,CADR,EAEO,EAAa,SAAS,CAAC,QAAQ,CAAC,UACnC,EAAa,SAAS,CAAC,GAAG,CAAC,SAGzB,EAAa,SAAS,CAAC,QAAQ,CAAC,YAClC,EAAa,SAAS,CAAC,MAAM,CAAC,WAEhC,EAAa,SAAS,CAAG,EAAM,OAAO,CACtC,SAAS,IAAI,CAAC,OAAO,CAAC,EACxB,EACJ,CAvEA,EAAa,YAAY,CAAC,UAAW,gBAmBrC,SAAS,gBAAgB,CAAC,QAP1B,SAAS,IACP,IACA,IAEA,SAAS,mBAAmB,CAAC,QAAS,EACxC,GAIA,SAAS,gBAAgB,CAAC,YAAa,SAAC,CAAxC,EACmB,IAAb,EAAE,MAAM,EACV,CAAA,EAAgB,CAAA,CADlB,EAIiB,IAAb,EAAE,MAAM,EACV,CAAA,EAAiB,CAAA,CADnB,EAgDO,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,WAAW,WACT,EAAQ,8BACV,EAAG,IACL,GAAG,IAAI,CAAC,SAAC,CAAT,EACE,EAAa,SAAS,CAAC,GAAG,CAAC,WAC3B,EAAa,SAAS,CAAC,MAAM,CAAC,SAC9B,EAAa,SAAS,CAAG,EACzB,SAAS,IAAI,CAAC,OAAO,CAAC,EACxB,GAnDI,GAAiB,GAuDd,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,WAAW,WACT,EAAQ,6BACV,EAAG,IACL,GAAG,IAAI,CAAC,SAAC,CAAT,EACE,EAAa,SAAS,CAAC,GAAG,CAAC,WAC3B,EAAa,SAAS,CAAC,MAAM,CAAC,SAC9B,EAAa,SAAS,CAAG,EACzB,SAAS,IAAI,CAAC,OAAO,CAAC,EACxB,EA7DF,GAEA,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EACE,EAAE,cAAc,EAClB,GA4DA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar isClickedLeft = false;\nvar isClickedRight = false;\nvar timer;\nvar notification = document.createElement(\"div\");\nnotification.setAttribute(\"data-qa\", \"notification\");\nfunction resetTimer() {\n    clearTimeout(timer);\n    timer = setTimeout(function() {\n        if (!isClickedLeft) firstPromise();\n    }, 3000);\n}\nfunction handleFirstClick() {\n    firstPromise();\n    resetTimer();\n    document.removeEventListener(\"click\", handleFirstClick);\n}\ndocument.addEventListener(\"click\", handleFirstClick);\ndocument.addEventListener(\"mousedown\", function(e) {\n    if (e.button === 0) isClickedLeft = true;\n    if (e.button === 2) isClickedRight = true;\n    secondPromise();\n    if (isClickedLeft && isClickedRight) thirdPromise();\n});\ndocument.addEventListener(\"contextmenu\", function(e) {\n    e.preventDefault();\n});\nfunction firstPromise() {\n    return new Promise(function(resolve, reject) {\n        if (isClickedLeft) resolve(\"First promise was resolved\");\n        else reject(new Error(\"First promise was rejected\"));\n    }).then(function(result) {\n        if (!notification.classList.contains(\"success\")) notification.classList.add(\"success\");\n        if (notification.classList.contains(\"error\")) notification.classList.remove(\"error\");\n        notification.innerText = result;\n        document.body.prepend(notification);\n    }).catch(function(error) {\n        if (!notification.classList.contains(\"error\")) notification.classList.add(\"error\");\n        if (notification.classList.contains(\"success\")) notification.classList.remove(\"success\");\n        notification.innerText = error.message;\n        document.body.prepend(notification);\n    });\n}\nfunction secondPromise() {\n    return new Promise(function(resolve, reject) {\n        setTimeout(function() {\n            resolve(\"Second promise was resolved\");\n        }, 1000);\n    }).then(function(result) {\n        notification.classList.add(\"success\");\n        notification.classList.remove(\"error\");\n        notification.innerText = result;\n        document.body.prepend(notification);\n    });\n}\nfunction thirdPromise() {\n    return new Promise(function(resolve, reject) {\n        setTimeout(function() {\n            resolve(\"Third promise was resolved\");\n        }, 500);\n    }).then(function(result) {\n        notification.classList.add(\"success\");\n        notification.classList.remove(\"error\");\n        notification.innerText = result;\n        document.body.prepend(notification);\n    });\n}\nresetTimer();\n\n//# sourceMappingURL=index.e23e3acb.js.map\n","'use strict';\n\nlet isClickedLeft = false;\nlet isClickedRight = false;\nlet timer;\nconst notification = document.createElement('div');\n\nnotification.setAttribute('data-qa', 'notification');\n\nfunction resetTimer() {\n  clearTimeout(timer);\n\n  timer = setTimeout(() => {\n    if (!isClickedLeft) {\n      firstPromise();\n    }\n  }, 3000);\n}\n\nfunction handleFirstClick() {\n  firstPromise();\n  resetTimer();\n\n  document.removeEventListener('click', handleFirstClick);\n}\n\ndocument.addEventListener('click', handleFirstClick);\n\ndocument.addEventListener('mousedown', (e) => {\n  if (e.button === 0) {\n    isClickedLeft = true;\n  }\n\n  if (e.button === 2) {\n    isClickedRight = true;\n  }\n\n  secondPromise();\n\n  if (isClickedLeft && isClickedRight) {\n    thirdPromise();\n  }\n});\n\ndocument.addEventListener('contextmenu', (e) => {\n  e.preventDefault();\n});\n\nfunction firstPromise() {\n  return new Promise((resolve, reject) => {\n    if (isClickedLeft) {\n      resolve('First promise was resolved');\n    } else {\n      reject(new Error('First promise was rejected'));\n    }\n  })\n    .then((result) => {\n      if (!notification.classList.contains('success')) {\n        notification.classList.add('success');\n      }\n\n      if (notification.classList.contains('error')) {\n        notification.classList.remove('error');\n      }\n      notification.innerText = result;\n      document.body.prepend(notification);\n    })\n    .catch((error) => {\n      if (!notification.classList.contains('error')) {\n        notification.classList.add('error');\n      }\n\n      if (notification.classList.contains('success')) {\n        notification.classList.remove('success');\n      }\n      notification.innerText = error.message;\n      document.body.prepend(notification);\n    });\n}\n\nfunction secondPromise() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve('Second promise was resolved');\n    }, 1000);\n  }).then((result) => {\n    notification.classList.add('success');\n    notification.classList.remove('error');\n    notification.innerText = result;\n    document.body.prepend(notification);\n  });\n}\n\nfunction thirdPromise() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve('Third promise was resolved');\n    }, 500);\n  }).then((result) => {\n    notification.classList.add('success');\n    notification.classList.remove('error');\n    notification.innerText = result;\n    document.body.prepend(notification);\n  });\n}\n\nresetTimer();\n"],"names":["timer","isClickedLeft","isClickedRight","notification","document","createElement","resetTimer","clearTimeout","setTimeout","firstPromise","Promise","resolve","reject","Error","then","result","classList","contains","add","remove","innerText","body","prepend","catch","error","message","setAttribute","addEventListener","handleFirstClick","removeEventListener","e","button","preventDefault"],"version":3,"file":"index.e23e3acb.js.map"}